#Prompts in Ukrainian but you can change them
#
#Author: Alexander Zaratustra (GitHub: SamcraftSam)
#

import os
import openai

#openai.organization = "" #for organizations
openai.api_key = "" #YOUR PRIV-KEY

#====MAIN FUNCTION====
def chat(setup, message): #'setup' for prompt with task explaintation, 'message' for material
    #global messages
    setup.append({"role": "assistant", "content": message}) 
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=setup
        )
        setup.append({"role": "assistant", "content": response["choices"][0]["message"].content})
        return response["choices"][0]["message"]["content"]
    except Exception as e:
        return repr(e)

def publication(msg):
    pset = "Зараз ти будеш писати новину для мого вебсайту на основі наданого повного тексту в наступних повідомленнях. Пам'ятай, що професійні новини складається лише з фактів та коментарів й новини не можуть бути дуже короткими. Коли це можливо, зроби так щоб текст цієї новини краще просувався у пошуковиках системах на запит 'новини міста Чернігова'. Користуйся правилами SEO для написання новини та правильною структурою (використовуючи правило F, також відомим як правило першого абзацу) роблячи текст легким для читання з метою змусити читача прочитати його до кінця. Також, обирай довжину в залежності від цікавості теми читачем та довжини самого тексту. Якщо новина велика та може бути розділена на частини, то вказуй заголовки для цих частин (помічаючи їх як 'H2: <заголовок>'). Готовий писати новину?"
    pset_j = [
    {"role": "assistant", "content": pset},
    ]
    return chat(pset_j, msg)

def header(msg):
    pset = "Зараз ти будеш писати короткий простий для розуміння читачами заголовок для вебсайту новин чернігівської області до повного тексту новини який я напишу тобі в наступних повідомленнях. Врахуй те, що заголовок повинен бути SEO оптимізованим та пов'язаним з пошуковим запитом на тему 'новини Чернігівщини'.  Готовий написати заголовок?"
    pset_j = [
    {"role": "assistant", "content": pset},
    ]
    return chat(pset_j, msg)

def message(msg):
    pset = "Зараз будемо писати максимально стислу версію повного тексту новини, яку я надішлю наступним повідомленням. Ця версія повинна містити лише суть новини, що змусить читача перейти на вебсайт для продовження читання. Текст не повинен бути великим та містити додаткової не важливої інформації, яка не цікава читачам.  За потреби розділяй зміст тексту перенесенням на новий рядок. Текст повинен бути зрозумілим та чітким для читачів, а на його початку (першим символом) підбери емодзі яке максимально відповідає змісту новини, емодзі також, за потреби, можна буде і в інших частинах тексту. Готовий написати?"
    pset_j = [
    {"role": "assistant", "content": pset},
    ]
    return chat(pset_j, msg)
